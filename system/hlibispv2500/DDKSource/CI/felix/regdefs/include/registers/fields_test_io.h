/**
******************************************************************************
@file   /home/jenkins/builds/workspace/ISP_PKG/build/CI/felix/regdefs/regdefs//registers/fields_test_io.h

@brief  FIELDS_TEST_IO_H registers and fields property array (name, offset, etc)

@author <Autogenerated>
		<b>Copyright 2005 by Imagination Technologies Limited.</b>
		All rights reserved.  No part of this software, either
		material or conceptual may be copied or distributed,
		transmitted, transcribed, stored in a retrieval system
		or translated into any human or computer language in any
		form by any means, electronic, mechanical, manual or
		other-wise, or disclosed to third parties without the
		express written permission of Imagination Technologies
		Limited, Unit 8, HomePark Industrial Estate,
		King's Langley, Hertfordshire, WD4 8LZ, U.K.


<b>Description:</b>
		Defines the FieldDefnListEl structure if not already defined (FIELD_DEFN_LIST_EL).


		Defines an array of FieldDefnListEl that contains all registers and fields information (non-sorted).
<b>Platform:</b> ?
@Version 1.0

******************************************************************************/

#if !defined (__FIELDS_TEST_IO_H__)
#define __FIELDS_TEST_IO_H__

#ifdef __cplusplus
extern "C" {
#endif

#ifndef FIELD_DEFN_LIST_EL
#define FIELD_DEFN_LIST_EL
/** @brief Register information structure */
typedef struct _FieldDefnListEl
{
	const IMG_CHAR*		szRegName; /**< @brief Register's name */
	const IMG_CHAR*		szFieldName; /**< @brief Field's name */
	IMG_UINT32		ui32RegOffset; /**< @brief Register's offset in Bytes in the register bank */
	IMG_UINT32		ui32FieldStart; /**< @brief Field's starting offset in bits (from ui32RegOffset) */
	IMG_UINT32		ui32FieldEnd; /**< @brief Field's ending offset in bits (from ui32RegOffset) */
	IMG_UINT32		ui32FieldDefault; /**< @brief Field's default value */
} FieldDefnListEl;
#endif // FIELD_DEFN_LIST_EL


#define FELIX_TEST_IO_FIELDS FieldDefnListEl felix_test_io_fields[] = {\
	{"PATTERN_CONFIG_0", "PATTERN_ROWS_0", 0x00000050, 12, 23, 0x0},\
	{"PATTERN_CONFIG_0", "PATTERN_COLS_0", 0x00000050, 0, 11, 0x0},\
	{"PATTERN_CTRL_0", "PATTERN_N_OF_FRAMES_0", 0x0000004C, 14, 23, 0x0},\
	{"PATTERN_CTRL_0", "PATTERN_VERT_BLANKING_0", 0x0000004C, 9, 13, 0x0},\
	{"PATTERN_CTRL_0", "PATTERN_HOR_BLANKING_0", 0x0000004C, 4, 8, 0x0},\
	{"PATTERN_CTRL_0", "PATTERN_MODE_0", 0x0000004C, 2, 3, 0x0},\
	{"PATTERN_CTRL_0", "PATTERN_STOP_0", 0x0000004C, 1, 1, 0x0},\
	{"PATTERN_CTRL_0", "PATTERN_ENABLE_0", 0x0000004C, 0, 0, 0x0},\
	{"PATTERN_CONFIG_1", "PATTERN_ROWS_1", 0x00000058, 12, 23, 0x0},\
	{"PATTERN_CONFIG_1", "PATTERN_COLS_1", 0x00000058, 0, 11, 0x0},\
	{"PATTERN_CTRL_1", "PATTERN_N_OF_FRAMES_1", 0x00000054, 14, 23, 0x0},\
	{"PATTERN_CTRL_1", "PATTERN_VERT_BLANKING_1", 0x00000054, 9, 13, 0x0},\
	{"PATTERN_CTRL_1", "PATTERN_HOR_BLANKING_1", 0x00000054, 4, 8, 0x0},\
	{"PATTERN_CTRL_1", "PATTERN_MODE_1", 0x00000054, 2, 3, 0x0},\
	{"PATTERN_CTRL_1", "PATTERN_STOP_1", 0x00000054, 1, 1, 0x0},\
	{"PATTERN_CTRL_1", "PATTERN_ENABLE_1", 0x00000054, 0, 0, 0x0},\
	{"PATTERN_CONFIG_2", "PATTERN_ROWS_2", 0x00000060, 12, 23, 0x0},\
	{"PATTERN_CONFIG_2", "PATTERN_COLS_2", 0x00000060, 0, 11, 0x0},\
	{"PATTERN_CTRL_2", "PATTERN_N_OF_FRAMES_2", 0x0000005C, 14, 23, 0x0},\
	{"PATTERN_CTRL_2", "PATTERN_VERT_BLANKING_2", 0x0000005C, 9, 13, 0x0},\
	{"PATTERN_CTRL_2", "PATTERN_HOR_BLANKING_2", 0x0000005C, 4, 8, 0x0},\
	{"PATTERN_CTRL_2", "PATTERN_MODE_2", 0x0000005C, 2, 3, 0x0},\
	{"PATTERN_CTRL_2", "PATTERN_STOP_2", 0x0000005C, 1, 1, 0x0},\
	{"PATTERN_CTRL_2", "PATTERN_ENABLE_2", 0x0000005C, 0, 0, 0x0},\
	{"GPIO_OUT_0", "OUTPUTS_0", 0x0000007C, 0, 7, 0x0},\
	{"GPIO_IN_0", "INPUTS_0", 0x00000078, 0, 15, 0x0},\
	{"GPIO_OUT_1", "OUTPUTS_1", 0x00000084, 0, 7, 0x0},\
	{"GPIO_IN_1", "INPUTS_1", 0x00000080, 0, 15, 0x0},\
	{"GPIO_OUT_2", "OUTPUTS_2", 0x0000008C, 0, 7, 0x0},\
	{"GPIO_IN_2", "INPUTS_2", 0x00000088, 0, 15, 0x0},\
	{"GPIO_OUT_3", "OUTPUTS_3", 0x00000094, 0, 7, 0x0},\
	{"GPIO_IN_3", "INPUTS_3", 0x00000090, 0, 15, 0x0},\
	{"GPIO_OUT_4", "OUTPUTS_4", 0x0000009C, 0, 7, 0x0},\
	{"GPIO_IN_4", "INPUTS_4", 0x00000098, 0, 15, 0x0},\
	{"GPIO_OUT_5", "OUTPUTS_5", 0x000000A4, 0, 7, 0x0},\
	{"GPIO_IN_5", "INPUTS_5", 0x000000A0, 0, 15, 0x0},\
	{"GPIO_OUT_6", "OUTPUTS_6", 0x000000AC, 0, 7, 0x0},\
	{"GPIO_IN_6", "INPUTS_6", 0x000000A8, 0, 15, 0x0},\
	{"GPIO_OUT_7", "OUTPUTS_7", 0x000000B4, 0, 7, 0x0},\
	{"GPIO_IN_7", "INPUTS_7", 0x000000B0, 0, 15, 0x0},\
	{"GPIO_OUT_8", "OUTPUTS_8", 0x000000BC, 0, 7, 0x0},\
	{"GPIO_IN_8", "INPUTS_8", 0x000000B8, 0, 15, 0x0},\
	{"GPIO_OUT_9", "OUTPUTS_9", 0x000000C4, 0, 7, 0x0},\
	{"GPIO_IN_9", "INPUTS_9", 0x000000C0, 0, 15, 0x0},\
	{"GPIO_OUT_10", "OUTPUTS_10", 0x000000CC, 0, 7, 0x0},\
	{"GPIO_IN_10", "INPUTS_10", 0x000000C8, 0, 15, 0x0},\
	{"GPIO_OUT_11", "OUTPUTS_11", 0x000000D4, 0, 7, 0x0},\
	{"GPIO_IN_11", "INPUTS_11", 0x000000D0, 0, 15, 0x0},\
	{"GPIO_OUT_12", "OUTPUTS_12", 0x000000DC, 0, 7, 0x0},\
	{"GPIO_IN_12", "INPUTS_12", 0x000000D8, 0, 15, 0x0},\
	{"GPIO_OUT_13", "OUTPUTS_13", 0x000000E4, 0, 7, 0x0},\
	{"GPIO_IN_13", "INPUTS_13", 0x000000E0, 0, 15, 0x0},\
	{"GPIO_OUT_14", "OUTPUTS_14", 0x000000EC, 0, 7, 0x0},\
	{"GPIO_IN_14", "INPUTS_14", 0x000000E8, 0, 15, 0x0},\
	{"GPIO_OUT_15", "OUTPUTS_15", 0x000000F4, 0, 7, 0x0},\
	{"GPIO_IN_15", "INPUTS_15", 0x000000F0, 0, 15, 0x0},\
	{"MEM_CTRL", "MEM_LATENCY_MIN", 0x00000000, 0, 7, 0x0},\
	{"MEM_CTRL", "MEM_LATENCY_MAX", 0x00000000, 8, 15, 0x4},\
	{"MEM_CTRL", "MEM_STALL_RATIO", 0x00000000, 16, 19, 0x0},\
	{"MEM_CTRL", "MEM_40BIT_MMU_MODE", 0x00000000, 21, 21, 0x0},\
	{"MEM_CTRL", "MEM_36BIT_MMU_MODE", 0x00000000, 22, 22, 0x0},\
	{"MEM_CTRL", "MEM_READ_8TIMES_OUT", 0x00000000, 23, 23, 0x0},\
	{"MEM_CTRL", "MEM_READ_OUTSTANDING", 0x00000000, 24, 31, 0x0},\
	{"SYS_CTRL", "SYS_STALL_RATIO", 0x00000004, 0, 3, 0x0},\
	{"MEM_CTRL_EXT", "MEM_ENCRYPT", 0x00000008, 20, 20, 0x0},\
	{"MEM_CTRL_EXT", "MEM_RDATA_INTERLEAVE_MODE", 0x00000008, 18, 18, 0x0},\
	{"MEM_CTRL_EXT", "MEM_WRESP_REORDER_MODE", 0x00000008, 17, 17, 0x0},\
	{"MEM_CTRL_EXT", "MEM_RDATA_REORDER_MODE", 0x00000008, 16, 16, 0x0},\
	{"MEM_CTRL_EXT", "MEM_LATENCY_MAX_LOWERBS", 0x00000008, 8, 12, 0x0},\
	{"MEM_CTRL_EXT", "MEM_LATENCY_MIN_LOWERBS", 0x00000008, 0, 4, 0x0},\
	{"CLK_ENABLE_CTRL", "FORCE_CLK_ENABLE", 0x0000000C, 0, 0, 0x0},\
	{"CLK_ENABLE_STATUS", "CLOCK_ENABLESTATUS_MEM", 0x00000010, 18, 18, 0x0},\
	{"CLK_ENABLE_STATUS", "CLOCK_ENABLESTATUS_CTRL", 0x00000010, 17, 17, 0x0},\
	{"CLK_ENABLE_STATUS", "CLOCK_ENABLESTATUS_SCB", 0x00000010, 16, 16, 0x0},\
	{"CLK_ENABLE_STATUS", "CLOCK_ENABLESTATUS_DG", 0x00000010, 15, 15, 0x0},\
	{"CLK_ENABLE_STATUS", "CLOCK_ENABLESTATUS_CTX_7", 0x00000010, 14, 14, 0x0},\
	{"CLK_ENABLE_STATUS", "CLOCK_ENABLESTATUS_CTX_6", 0x00000010, 13, 13, 0x0},\
	{"CLK_ENABLE_STATUS", "CLOCK_ENABLESTATUS_CTX_5", 0x00000010, 12, 12, 0x0},\
	{"CLK_ENABLE_STATUS", "CLOCK_ENABLESTATUS_CTX_4", 0x00000010, 11, 11, 0x0},\
	{"CLK_ENABLE_STATUS", "CLOCK_ENABLESTATUS_CTX_3", 0x00000010, 10, 10, 0x0},\
	{"CLK_ENABLE_STATUS", "CLOCK_ENABLESTATUS_CTX_2", 0x00000010, 9, 9, 0x0},\
	{"CLK_ENABLE_STATUS", "CLOCK_ENABLESTATUS_CTX_1", 0x00000010, 8, 8, 0x0},\
	{"CLK_ENABLE_STATUS", "CLOCK_ENABLESTATUS_CTX_0", 0x00000010, 7, 7, 0x0},\
	{"CLK_ENABLE_STATUS", "CLOCK_ENABLESTATUS_GRP_6", 0x00000010, 6, 6, 0x0},\
	{"CLK_ENABLE_STATUS", "CLOCK_ENABLESTATUS_GRP_5", 0x00000010, 5, 5, 0x0},\
	{"CLK_ENABLE_STATUS", "CLOCK_ENABLESTATUS_GRP_4", 0x00000010, 4, 4, 0x0},\
	{"CLK_ENABLE_STATUS", "CLOCK_ENABLESTATUS_GRP_3", 0x00000010, 3, 3, 0x0},\
	{"CLK_ENABLE_STATUS", "CLOCK_ENABLESTATUS_GRP_2", 0x00000010, 2, 2, 0x0},\
	{"CLK_ENABLE_STATUS", "CLOCK_ENABLESTATUS_GRP_1", 0x00000010, 1, 1, 0x0},\
	{"CLK_ENABLE_STATUS", "CLOCK_ENABLESTATUS_GRP_0", 0x00000010, 0, 0, 0x0},\
	{"FELIX_IDLE_STATUS", "FELIX_IDLE", 0x00000014, 0, 0, 0x0},\
	{"FELIX_IRQ_STATUS", "FELIX_IRQ", 0x00000018, 0, 0, 0x0},\
	{"MEM_CMD_CACHE_ERROR_STATUS", "MEM_CMD_CACHE_ERROR", 0x0000001C, 0, 0, 0x0},\
	{"MEM_CMD_CACHE_ERROR_CODE", "ERROR_RDNWR", 0x00000020, 11, 11, 0x0},\
	{"MEM_CMD_CACHE_ERROR_CODE", "ERROR_CMD_CACHE", 0x00000020, 9, 10, 0x0},\
	{"MEM_CMD_CACHE_ERROR_CODE", "ERROR_TAG_SB", 0x00000020, 5, 8, 0x0},\
	{"MEM_CMD_CACHE_ERROR_CODE", "ERROR_TAG_ID", 0x00000020, 0, 4, 0x0},\
	{"MEM_CMD_PRIORITY_CONFIG", "CMD_MMU_PRIORITY_ENABLE", 0x00000024, 16, 16, 0x1},\
	{"MEM_CMD_PRIORITY_CONFIG", "CMD_PRIORITY_ENABLE[15]", 0x00000024, 15, 15, 0x0},\
	{"MEM_CMD_PRIORITY_CONFIG", "CMD_PRIORITY_ENABLE[14]", 0x00000024, 14, 14, 0x0},\
	{"MEM_CMD_PRIORITY_CONFIG", "CMD_PRIORITY_ENABLE[13]", 0x00000024, 13, 13, 0x0},\
	{"MEM_CMD_PRIORITY_CONFIG", "CMD_PRIORITY_ENABLE[12]", 0x00000024, 12, 12, 0x0},\
	{"MEM_CMD_PRIORITY_CONFIG", "CMD_PRIORITY_ENABLE[11]", 0x00000024, 11, 11, 0x0},\
	{"MEM_CMD_PRIORITY_CONFIG", "CMD_PRIORITY_ENABLE[10]", 0x00000024, 10, 10, 0x0},\
	{"MEM_CMD_PRIORITY_CONFIG", "CMD_PRIORITY_ENABLE[9]", 0x00000024, 9, 9, 0x0},\
	{"MEM_CMD_PRIORITY_CONFIG", "CMD_PRIORITY_ENABLE[8]", 0x00000024, 8, 8, 0x0},\
	{"MEM_CMD_PRIORITY_CONFIG", "CMD_PRIORITY_ENABLE[7]", 0x00000024, 7, 7, 0x0},\
	{"MEM_CMD_PRIORITY_CONFIG", "CMD_PRIORITY_ENABLE[6]", 0x00000024, 6, 6, 0x0},\
	{"MEM_CMD_PRIORITY_CONFIG", "CMD_PRIORITY_ENABLE[5]", 0x00000024, 5, 5, 0x0},\
	{"MEM_CMD_PRIORITY_CONFIG", "CMD_PRIORITY_ENABLE[4]", 0x00000024, 4, 4, 0x0},\
	{"MEM_CMD_PRIORITY_CONFIG", "CMD_PRIORITY_ENABLE[3]", 0x00000024, 3, 3, 0x0},\
	{"MEM_CMD_PRIORITY_CONFIG", "CMD_PRIORITY_ENABLE[2]", 0x00000024, 2, 2, 0x0},\
	{"MEM_CMD_PRIORITY_CONFIG", "CMD_PRIORITY_ENABLE[1]", 0x00000024, 1, 1, 0x0},\
	{"MEM_CMD_PRIORITY_CONFIG", "CMD_PRIORITY_ENABLE[0]", 0x00000024, 0, 0, 0x0},\
	{"MEM_CMD_PRIORITY_ERROR_STATUS", "CMD_MMU_PRIORITY_ERROR", 0x00000028, 16, 16, 0x0},\
	{"MEM_CMD_PRIORITY_ERROR_STATUS", "CMD_PRIORITY_ERROR[15]", 0x00000028, 15, 15, 0x0},\
	{"MEM_CMD_PRIORITY_ERROR_STATUS", "CMD_PRIORITY_ERROR[14]", 0x00000028, 14, 14, 0x0},\
	{"MEM_CMD_PRIORITY_ERROR_STATUS", "CMD_PRIORITY_ERROR[13]", 0x00000028, 13, 13, 0x0},\
	{"MEM_CMD_PRIORITY_ERROR_STATUS", "CMD_PRIORITY_ERROR[12]", 0x00000028, 12, 12, 0x0},\
	{"MEM_CMD_PRIORITY_ERROR_STATUS", "CMD_PRIORITY_ERROR[11]", 0x00000028, 11, 11, 0x0},\
	{"MEM_CMD_PRIORITY_ERROR_STATUS", "CMD_PRIORITY_ERROR[10]", 0x00000028, 10, 10, 0x0},\
	{"MEM_CMD_PRIORITY_ERROR_STATUS", "CMD_PRIORITY_ERROR[9]", 0x00000028, 9, 9, 0x0},\
	{"MEM_CMD_PRIORITY_ERROR_STATUS", "CMD_PRIORITY_ERROR[8]", 0x00000028, 8, 8, 0x0},\
	{"MEM_CMD_PRIORITY_ERROR_STATUS", "CMD_PRIORITY_ERROR[7]", 0x00000028, 7, 7, 0x0},\
	{"MEM_CMD_PRIORITY_ERROR_STATUS", "CMD_PRIORITY_ERROR[6]", 0x00000028, 6, 6, 0x0},\
	{"MEM_CMD_PRIORITY_ERROR_STATUS", "CMD_PRIORITY_ERROR[5]", 0x00000028, 5, 5, 0x0},\
	{"MEM_CMD_PRIORITY_ERROR_STATUS", "CMD_PRIORITY_ERROR[4]", 0x00000028, 4, 4, 0x0},\
	{"MEM_CMD_PRIORITY_ERROR_STATUS", "CMD_PRIORITY_ERROR[3]", 0x00000028, 3, 3, 0x0},\
	{"MEM_CMD_PRIORITY_ERROR_STATUS", "CMD_PRIORITY_ERROR[2]", 0x00000028, 2, 2, 0x0},\
	{"MEM_CMD_PRIORITY_ERROR_STATUS", "CMD_PRIORITY_ERROR[1]", 0x00000028, 1, 1, 0x0},\
	{"MEM_CMD_PRIORITY_ERROR_STATUS", "CMD_PRIORITY_ERROR[0]", 0x00000028, 0, 0, 0x0},\
	{"MEM_REQ_PRIORITY_EDGE_STATUS", "MEM_REQ_PRIORITY_EDGE", 0x0000002C, 0, 0, 0x0},\
	{"MEM_LIMITED_THROUGHPUT_CONTROL", "MEM_LIMITED_THROUGHPUT", 0x00000030, 0, 0, 0x0},\
	{"DESIGNER_FIELD_CONTROL", "DESIGNER_FIELD", 0x00000034, 0, 31, 0x0},\
	{"COUNTER_CONTROL", "COUNTER_INC", 0x00000038, 1, 1, 0x0},\
	{"COUNTER_CONTROL", "COUNTER_RST", 0x00000038, 0, 0, 0x0},\
	{"RTM_STATUS", "RTM_B", 0x0000003C, 8, 15, 0x0},\
	{"RTM_STATUS", "RTM_A", 0x0000003C, 0, 7, 0x0},\
	{"MEM_STALL_CTRL", "MEM_SEED_GAP", 0x00000040, 19, 29, 0x0},\
	{"MEM_STALL_CTRL", "MEM_SEED_BURST", 0x00000040, 8, 18, 0x0},\
	{"MEM_STALL_CTRL", "MEM_MAX_GAP", 0x00000040, 4, 7, 0x0},\
	{"MEM_STALL_CTRL", "MEM_MAX_BURST", 0x00000040, 0, 3, 0x0},\
	{"SYS_STALL_CTRL", "SYS_SEED_GAP", 0x00000044, 19, 29, 0x0},\
	{"SYS_STALL_CTRL", "SYS_SEED_BURST", 0x00000044, 8, 18, 0x0},\
	{"SYS_STALL_CTRL", "SYS_MAX_GAP", 0x00000044, 4, 7, 0x0},\
	{"SYS_STALL_CTRL", "SYS_MAX_BURST", 0x00000044, 0, 3, 0x0},\
	{"MEM_CMD_CACHE_CONFIG", "MMU_CACHE_POLICY", 0x00000048, 1, 1, 0x0},\
	{"MEM_CMD_CACHE_CONFIG", "FORCE_CACHE_POLICY_BYPASS", 0x00000048, 0, 0, 0x0},\
	{"ENC_FRAME_COUNTER", "ENC_FRAME_COUNTER", 0x00000064, 0, 31, 0x0},\
	{"ENC_LINE_COUNTER", "ENC_LINE_COUNTER", 0x00000068, 0, 15, 0x0},\
	{"EXT_SOFT_RESET", "EXT_SOFT_RESET", 0x0000006C, 0, 0, 0x0},\
	{"EXT_DISABLE_IMAGER", "DISABLE_IMAGER_INPUT", 0x00000070, 0, 0, 0x0},\
	{"CLK_ENABLE_STATUS_GASKET", "CLOCK_ENABLESTATUS_GAS_15", 0x00000074, 15, 15, 0x0},\
	{"CLK_ENABLE_STATUS_GASKET", "CLOCK_ENABLESTATUS_GAS_14", 0x00000074, 14, 14, 0x0},\
	{"CLK_ENABLE_STATUS_GASKET", "CLOCK_ENABLESTATUS_GAS_13", 0x00000074, 13, 13, 0x0},\
	{"CLK_ENABLE_STATUS_GASKET", "CLOCK_ENABLESTATUS_GAS_12", 0x00000074, 12, 12, 0x0},\
	{"CLK_ENABLE_STATUS_GASKET", "CLOCK_ENABLESTATUS_GAS_11", 0x00000074, 11, 11, 0x0},\
	{"CLK_ENABLE_STATUS_GASKET", "CLOCK_ENABLESTATUS_GAS_10", 0x00000074, 10, 10, 0x0},\
	{"CLK_ENABLE_STATUS_GASKET", "CLOCK_ENABLESTATUS_GAS_9", 0x00000074, 9, 9, 0x0},\
	{"CLK_ENABLE_STATUS_GASKET", "CLOCK_ENABLESTATUS_GAS_8", 0x00000074, 8, 8, 0x0},\
	{"CLK_ENABLE_STATUS_GASKET", "CLOCK_ENABLESTATUS_GAS_7", 0x00000074, 7, 7, 0x0},\
	{"CLK_ENABLE_STATUS_GASKET", "CLOCK_ENABLESTATUS_GAS_6", 0x00000074, 6, 6, 0x0},\
	{"CLK_ENABLE_STATUS_GASKET", "CLOCK_ENABLESTATUS_GAS_5", 0x00000074, 5, 5, 0x0},\
	{"CLK_ENABLE_STATUS_GASKET", "CLOCK_ENABLESTATUS_GAS_4", 0x00000074, 4, 4, 0x0},\
	{"CLK_ENABLE_STATUS_GASKET", "CLOCK_ENABLESTATUS_GAS_3", 0x00000074, 3, 3, 0x0},\
	{"CLK_ENABLE_STATUS_GASKET", "CLOCK_ENABLESTATUS_GAS_2", 0x00000074, 2, 2, 0x0},\
	{"CLK_ENABLE_STATUS_GASKET", "CLOCK_ENABLESTATUS_GAS_1", 0x00000074, 1, 1, 0x0},\
	{"CLK_ENABLE_STATUS_GASKET", "CLOCK_ENABLESTATUS_GAS_0", 0x00000074, 0, 0, 0x0},\
};

#define FELIX_TEST_IO_ADD_FIELD_DEFNS(DefnSet, Memspace, MemspaceID) \
	{ \
		int i; \
		FELIX_TEST_IO_FIELDS; \
		for (i = 0; i < (sizeof(felix_test_io_fields)/sizeof(*felix_test_io_fields)); i++) \
		{ \
			addFieldDefn(DefnSet, Memspace, MemspaceID, \
				felix_test_io_fields[i].szRegName, \
				felix_test_io_fields[i].szFieldName, \
				felix_test_io_fields[i].ui32RegOffset, \
				felix_test_io_fields[i].ui32FieldStart, \
				felix_test_io_fields[i].ui32FieldEnd, \
				felix_test_io_fields[i].ui32FieldDefault); \
		} \
	}




#ifdef __cplusplus
}
#endif

#endif /* __FIELDS_TEST_IO_H__ */
