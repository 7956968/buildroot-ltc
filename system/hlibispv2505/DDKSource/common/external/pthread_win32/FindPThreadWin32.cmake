cmake_minimum_required (VERSION 2.8)

if (NOT DEFINED PTHREADWIN32)
	get_filename_component(PTHREADWIN32 "${CMAKE_CURRENT_LIST_FILE}" PATH)
endif()

set (PTHREADWIN32_FOUND TRUE)

set (PTHREADWIN32_INCLUDE_DIRS ${PTHREADWIN32}/include)

option (PTHREADWIN32_CXXEXCEPTIONS "Use PThread library that supports C++ exception" OFF)

if (NOT MINGW)

if (NOT PTHREADWIN32_CXXEXCEPTIONS)
	set (PTHREADWIN32_DEFINITIONS -D__CLEANUP_C)
	set (PTHREADWIN32_LIBRARIES ${PTHREADWIN32}/lib/pthreadVC2.lib)
	set (PTHREADWIN32_INSTALL ${PTHREADWIN32}/lib/pthreadVC2.dll)
else()
	set (PTHREADWIN32_DEFINITIONS -D__CLEANUP_CXX)
	set (PTHREADWIN32_LIBRARIES ${PTHREADWIN32}/lib/pthreadVCE2.lib)
	set (PTHREADWIN32_INSTALL ${PTHREADWIN32}/lib/pthreadVCE2.dll)
endif()

else()

if (NOT PTHREADWIN32_CXXEXCEPTIONS)
	set (PTHREADWIN32_DEFINITIONS -D__CLEANUP_C)
	set (PTHREADWIN32_LIBRARIES ${PTHREADWIN32}/lib/pthreadGC2.lib)
	set (PTHREADWIN32_INSTALL ${PTHREADWIN32}/lib/pthreadGC2.dll)
else()
	set (PTHREADWIN32_DEFINITIONS -D__CLEANUP_CXX)
	set (PTHREADWIN32_LIBRARIES ${PTHREADWIN32}/lib/pthreadGCE2.lib)
	set (PTHREADWIN32_INSTALL ${PTHREADWIN32}/lib/pthreadGCE2.dll)
endif()

endif()

if (DEBUG_MODULE)
	message ("PTHREADWIN32_INCLUDE_DIRS=${PTHREADWIN32_INCLUDE_DIRS}")
	message ("PTHREADWIN32_DEFINITIONS=${PTHREADWIN32_DEFINITIONS}")
	message ("PTHREADWIN32_LIBRARIES=${PTHREADWIN32_LIBRARIES}")
endif()
