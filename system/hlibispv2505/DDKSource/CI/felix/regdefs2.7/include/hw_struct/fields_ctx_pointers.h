/**
******************************************************************************
@file   /home/jenkins/builds/workspace/ISP_PKG/build/CI/felix/regdefs2.7/regdefs//hw_struct/fields_ctx_pointers.h

@brief  FIELDS_CTX_POINTERS_H registers and fields property array (name, offset, etc)

@author <Autogenerated>
		<b>Copyright 2005 by Imagination Technologies Limited.</b>
		All rights reserved.  No part of this software, either
		material or conceptual may be copied or distributed,
		transmitted, transcribed, stored in a retrieval system
		or translated into any human or computer language in any
		form by any means, electronic, mechanical, manual or
		other-wise, or disclosed to third parties without the
		express written permission of Imagination Technologies
		Limited, Unit 8, HomePark Industrial Estate,
		King's Langley, Hertfordshire, WD4 8LZ, U.K.


<b>Description:</b>
		Defines the FieldDefnListEl structure if not already defined (FIELD_DEFN_LIST_EL).


		Defines an array of FieldDefnListEl that contains all registers and fields information (non-sorted).
<b>Platform:</b> ?
@Version 1.0

******************************************************************************/

#if !defined (__FIELDS_CTX_POINTERS_H__)
#define __FIELDS_CTX_POINTERS_H__

#ifdef __cplusplus
extern "C" {
#endif

#ifndef FIELD_DEFN_LIST_EL
#define FIELD_DEFN_LIST_EL
/** @brief Register information structure */
typedef struct _FieldDefnListEl
{
	const IMG_CHAR*		szRegName; /**< @brief Register's name */
	const IMG_CHAR*		szFieldName; /**< @brief Field's name */
	IMG_UINT32		ui32RegOffset; /**< @brief Register's offset in Bytes in the register bank */
	IMG_UINT32		ui32FieldStart; /**< @brief Field's starting offset in bits (from ui32RegOffset) */
	IMG_UINT32		ui32FieldEnd; /**< @brief Field's ending offset in bits (from ui32RegOffset) */
	IMG_UINT32		ui32FieldDefault; /**< @brief Field's default value */
} FieldDefnListEl;
#endif // FIELD_DEFN_LIST_EL


#define FELIX_LINK_LIST_FIELDS FieldDefnListEl felix_link_list_fields[] = {\
	{"CONTEXT_TAG", "CONTEXT_TAG", 0x00000000, 0, 7, 0x0},\
	{"MEM_ENC_Y_ADDR", "MEM_ENC_Y_ADDR", 0x00000004, 6, 31, 0x0},\
	{"MEM_ENC_Y_STR", "MEM_ENC_Y_STR", 0x00000008, 6, 31, 0x0},\
	{"MEM_ENC_Y_LAST_PAGE", "MEM_ENC_Y_LAST_PAGE", 0x0000000C, 12, 31, 0x0},\
	{"MEM_ENC_C_ADDR", "MEM_ENC_C_ADDR", 0x00000010, 6, 31, 0x0},\
	{"MEM_ENC_C_STR", "MEM_ENC_C_STR", 0x00000014, 6, 31, 0x0},\
	{"MEM_ENC_C_LAST_PAGE", "MEM_ENC_C_LAST_PAGE", 0x00000018, 12, 31, 0x0},\
	{"MEM_DISP_DE_ADDR", "MEM_DISP_DE_ADDR", 0x0000001C, 6, 31, 0x0},\
	{"MEM_DISP_DE_STR", "MEM_DISP_DE_STR", 0x00000020, 6, 31, 0x0},\
	{"MEM_DISP_DE_LAST_PAGE", "MEM_DISP_DE_LAST_PAGE", 0x00000024, 12, 31, 0x0},\
	{"DPF_WR_MAP_ADDR", "DPF_WR_MAP_ADDR", 0x00000028, 6, 31, 0x0},\
	{"ENS_WR_ADDR", "ENS_WR_ADDR", 0x0000002C, 6, 31, 0x0},\
	{"MEM_RAW_2D_ADDR", "MEM_RAW_2D_ADDR", 0x00000030, 0, 31, 0x0},\
	{"MEM_RAW_2D_STR", "MEM_RAW_2D_STR", 0x00000034, 0, 31, 0x0},\
	{"MEM_RAW_2D_LAST_PAGE", "MEM_RAW_2D_LAST_PAGE", 0x00000038, 12, 31, 0x0},\
	{"MEM_HDF_WR_ADDR", "MEM_HDF_WR_ADDR", 0x0000003C, 6, 31, 0x0},\
	{"MEM_HDF_WR_STR", "MEM_HDF_WR_STR", 0x00000040, 6, 31, 0x0},\
	{"MEM_HDF_WR_LAST_PAGE", "MEM_HDF_WR_LAST_PAGE", 0x00000044, 12, 31, 0x0},\
	{"MEM_HDF_RD_ADDR", "MEM_HDF_RD_ADDR", 0x00000048, 6, 31, 0x0},\
	{"MEM_HDF_RD_STR", "MEM_HDF_RD_STR", 0x0000004C, 6, 31, 0x0},\
	{"TILING_CONTROL", "DISP_DE_TILE_EN", 0x00000050, 0, 0, 0x0},\
	{"TILING_CONTROL", "HDF_WR_TILE_EN", 0x00000050, 1, 1, 0x0},\
	{"TILING_CONTROL", "ENC_L_TILE_EN", 0x00000050, 2, 2, 0x0},\
	{"TILING_CONTROL", "ENC_C_TILE_EN", 0x00000050, 3, 3, 0x0},\
	{"LOAD_CONFIG_ADDR", "LOAD_CONFIG_ADDR", 0x00000054, 6, 31, 0x0},\
	{"LOAD_CONFIG_FLAGS", "CONFIG_TAG", 0x00000058, 16, 23, 0x0},\
	{"LOAD_CONFIG_FLAGS", "LOAD_CONFIG_GRP_6", 0x00000058, 6, 6, 0x0},\
	{"LOAD_CONFIG_FLAGS", "LOAD_CONFIG_GRP_5", 0x00000058, 5, 5, 0x0},\
	{"LOAD_CONFIG_FLAGS", "LOAD_CONFIG_GRP_4", 0x00000058, 4, 4, 0x0},\
	{"LOAD_CONFIG_FLAGS", "LOAD_CONFIG_GRP_3", 0x00000058, 3, 3, 0x0},\
	{"LOAD_CONFIG_FLAGS", "LOAD_CONFIG_GRP_2", 0x00000058, 2, 2, 0x0},\
	{"LOAD_CONFIG_FLAGS", "LOAD_CONFIG_GRP_1", 0x00000058, 1, 1, 0x0},\
	{"LOAD_CONFIG_FLAGS", "LOAD_CONFIG_GRP_0", 0x00000058, 0, 0, 0x0},\
	{"SAVE_RESULTS_ADDR", "SAVE_RESULTS_ADDR", 0x0000005C, 6, 31, 0x0},\
	{"SAVE_CONFIG_FLAGS", "AWS_ENABLE", 0x00000060, 29, 29, 0x0},\
	{"SAVE_CONFIG_FLAGS", "HDF_WR_FORMAT", 0x00000060, 27, 28, 0x1},\
	{"SAVE_CONFIG_FLAGS", "HDF_WR_ENABLE", 0x00000060, 26, 26, 0x0},\
	{"SAVE_CONFIG_FLAGS", "HDF_RD_FORMAT", 0x00000060, 24, 25, 0x0},\
	{"SAVE_CONFIG_FLAGS", "HDF_RD_ENABLE", 0x00000060, 23, 23, 0x0},\
	{"SAVE_CONFIG_FLAGS", "RAW_2D_FORMAT", 0x00000060, 21, 22, 0x0},\
	{"SAVE_CONFIG_FLAGS", "RAW_2D_ENABLE", 0x00000060, 20, 20, 0x0},\
	{"SAVE_CONFIG_FLAGS", "DPF_WRITE_MAP_ENABLE", 0x00000060, 19, 19, 0x0},\
	{"SAVE_CONFIG_FLAGS", "DPF_READ_MAP_ENABLE", 0x00000060, 18, 18, 0x0},\
	{"SAVE_CONFIG_FLAGS", "ENS_ENABLE", 0x00000060, 17, 17, 0x0},\
	{"SAVE_CONFIG_FLAGS", "TIME_STAMP_ENABLE", 0x00000060, 16, 16, 0x0},\
	{"SAVE_CONFIG_FLAGS", "CRC_ENABLE", 0x00000060, 15, 15, 0x0},\
	{"SAVE_CONFIG_FLAGS", "FLD_ENABLE", 0x00000060, 14, 14, 0x0},\
	{"SAVE_CONFIG_FLAGS", "HIS_REGION_ENABLE", 0x00000060, 13, 13, 0x0},\
	{"SAVE_CONFIG_FLAGS", "HIS_GLOB_ENABLE", 0x00000060, 12, 12, 0x0},\
	{"SAVE_CONFIG_FLAGS", "WBS_ENABLE", 0x00000060, 11, 11, 0x0},\
	{"SAVE_CONFIG_FLAGS", "FOS_ROI_ENABLE", 0x00000060, 10, 10, 0x0},\
	{"SAVE_CONFIG_FLAGS", "FOS_GRID_ENABLE", 0x00000060, 9, 9, 0x0},\
	{"SAVE_CONFIG_FLAGS", "EXS_GLOB_ENABLE", 0x00000060, 8, 8, 0x0},\
	{"SAVE_CONFIG_FLAGS", "EXS_REGION_ENABLE", 0x00000060, 7, 7, 0x0},\
	{"SAVE_CONFIG_FLAGS", "DE_NO_DISP", 0x00000060, 6, 6, 0x0},\
	{"SAVE_CONFIG_FLAGS", "DISP_DE_FORMAT", 0x00000060, 4, 5, 0x0},\
	{"SAVE_CONFIG_FLAGS", "DISP_DE_ENABLE", 0x00000060, 3, 3, 0x0},\
	{"SAVE_CONFIG_FLAGS", "ENC_FORMAT", 0x00000060, 1, 2, 0x0},\
	{"SAVE_CONFIG_FLAGS", "ENC_ENABLE", 0x00000060, 0, 0, 0x0},\
};

#define FELIX_LINK_LIST_ADD_FIELD_DEFNS(DefnSet, Memspace, MemspaceID) \
	{ \
		int i; \
		FELIX_LINK_LIST_FIELDS; \
		for (i = 0; i < (sizeof(felix_link_list_fields)/sizeof(*felix_link_list_fields)); i++) \
		{ \
			addFieldDefn(DefnSet, Memspace, MemspaceID, \
				felix_link_list_fields[i].szRegName, \
				felix_link_list_fields[i].szFieldName, \
				felix_link_list_fields[i].ui32RegOffset, \
				felix_link_list_fields[i].ui32FieldStart, \
				felix_link_list_fields[i].ui32FieldEnd, \
				felix_link_list_fields[i].ui32FieldDefault); \
		} \
	}




#ifdef __cplusplus
}
#endif

#endif /* __FIELDS_CTX_POINTERS_H__ */
